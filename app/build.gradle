plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.jetbrains.kotlin.android)
    alias(libs.plugins.google.hilt)
    alias(libs.plugins.google.ksp)
}

// Loads the secrets from the given file for Different Variant
def secretPropertyFile = rootProject.file("secrets.properties")
def secretProperties = new Properties()
secretProperties.load(new FileInputStream(secretPropertyFile))

final BASE_URL = "\"https://api.themoviedb.org/3/\""
final IMAGE_URL = "\"https://image.tmdb.org/t/p/w500/\""

android {
    namespace 'com.varsha.moviedemo'
    compileSdk 34

    defaultConfig {
        applicationId "com.varsha.moviedemo"
        minSdk 24
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        debug {
            //API_KEY STRING
            buildConfigField "String", "API_KEY", secretProperties['API_KEY']
            //BASE_URL STRING
            buildConfigField "String", "BASE_URL", BASE_URL
            //Image_URL STRING
            buildConfigField "String", "IMAGE_URL", IMAGE_URL
        }
        release {
            //API_KEY STRING
            buildConfigField "String", "API_KEY", secretProperties['API_KEY']
            //BASE_URL STRING
            buildConfigField "String", "BASE_URL", BASE_URL
            //Image_URL STRING
            buildConfigField "String", "IMAGE_URL", IMAGE_URL

            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17
    }
    buildFeatures {
        compose true
        buildConfig true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.5.11'
    }
    packaging {
        resources {
            it.excludes += '/META-INF/{AL2.0,LGPL2.1,LICENSE-notice.md,LICENSE.md}'
        }
    }
}

dependencies {

    implementation libs.androidx.core.ktx
    implementation libs.androidx.appcompat
    implementation libs.material
    implementation(platform(libs.kotlin.bom))
    implementation(libs.google.hilt.core)
    ksp(libs.google.hilt.compiler)
    implementation libs.runtime.ktx
    implementation libs.runtime.compose
    implementation libs.viewmodel.compose
    implementation libs.activity
    implementation(platform(libs.compose.bom))
    implementation libs.compose.ui
    implementation libs.compose.ui.graphics
    implementation libs.compose.ui.tooling.preview
    implementation libs.androidx.material3
    debugImplementation(libs.androidx.ui.tooling)
    debugImplementation(libs.androidx.ui.tooling.preview)
    implementation libs.navigation.compose
    implementation libs.hilt.navigation.compose
    implementation libs.coroutines.android
    implementation libs.retrofit
    implementation libs.converter.gson
    implementation libs.timber
    implementation(platform(libs.okhttp.bom))
    implementation libs.okhttp
    implementation libs.okhttp.logging.interceptor
    implementation libs.android.material
    implementation libs.coil.compose
    implementation libs.ratingbar

    testImplementation libs.junit
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core
    testImplementation libs.core.testing
    testImplementation libs.coroutines.test
    testImplementation libs.google.truth
    testImplementation libs.okhttp.mockserver
    testImplementation libs.mockk
}